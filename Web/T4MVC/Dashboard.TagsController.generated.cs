// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Mn.NewsCms.Web.Areas.Dashboard.Controllers
{
    public partial class TagsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TagsController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected TagsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CreateEditHotKey()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateEditHotKey);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DeleteHotKey()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteHotKey);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Mn.NewsCms.Web.WebLogic.JsonNetResult HotTags_Read()
        {
            return new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.HotTags_Read);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Mn.NewsCms.Web.WebLogic.JsonNetResult Tag_Read()
        {
            return new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Tag_Read);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Mn.NewsCms.Web.WebLogic.JsonNetResult Tags_Data_Read()
        {
            return new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Tags_Data_Read);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CreateEdit()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Delete()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Remove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TagsController Actions { get { return MVC.Dashboard.Tags; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Tags";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Tags";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string HotKey = "HotKey";
            public readonly string CreateEditHotKey = "CreateEditHotKey";
            public readonly string DeleteHotKey = "DeleteHotKey";
            public readonly string HotTags_Read = "HotTags_Read";
            public readonly string Tag_Read = "Tag_Read";
            public readonly string Tags_Data_Read = "Tags_Data_Read";
            public readonly string Manage = "Manage";
            public readonly string CreateEdit = "CreateEdit";
            public readonly string Delete = "Delete";
            public readonly string Save = "Save";
            public readonly string Remove = "Remove";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string HotKey = "HotKey";
            public const string CreateEditHotKey = "CreateEditHotKey";
            public const string DeleteHotKey = "DeleteHotKey";
            public const string HotTags_Read = "HotTags_Read";
            public const string Tag_Read = "Tag_Read";
            public const string Tags_Data_Read = "Tags_Data_Read";
            public const string Manage = "Manage";
            public const string CreateEdit = "CreateEdit";
            public const string Delete = "Delete";
            public const string Save = "Save";
            public const string Remove = "Remove";
        }


        static readonly ActionParamsClass_CreateEditHotKey s_params_CreateEditHotKey = new ActionParamsClass_CreateEditHotKey();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateEditHotKey CreateEditHotKeyParams { get { return s_params_CreateEditHotKey; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateEditHotKey
        {
            public readonly string key = "key";
        }
        static readonly ActionParamsClass_DeleteHotKey s_params_DeleteHotKey = new ActionParamsClass_DeleteHotKey();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteHotKey DeleteHotKeyParams { get { return s_params_DeleteHotKey; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteHotKey
        {
            public readonly string key = "key";
        }
        static readonly ActionParamsClass_HotTags_Read s_params_HotTags_Read = new ActionParamsClass_HotTags_Read();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HotTags_Read HotTags_ReadParams { get { return s_params_HotTags_Read; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HotTags_Read
        {
            public readonly string request = "request";
        }
        static readonly ActionParamsClass_Tag_Read s_params_Tag_Read = new ActionParamsClass_Tag_Read();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tag_Read Tag_ReadParams { get { return s_params_Tag_Read; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tag_Read
        {
            public readonly string request = "request";
            public readonly string feedId = "feedId";
        }
        static readonly ActionParamsClass_Tags_Data_Read s_params_Tags_Data_Read = new ActionParamsClass_Tags_Data_Read();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tags_Data_Read Tags_Data_ReadParams { get { return s_params_Tags_Data_Read; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tags_Data_Read
        {
            public readonly string term = "term";
            public readonly string isGrid = "isGrid";
        }
        static readonly ActionParamsClass_CreateEdit s_params_CreateEdit = new ActionParamsClass_CreateEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateEdit CreateEditParams { get { return s_params_CreateEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateEdit
        {
            public readonly string tag = "tag";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string key = "key";
        }
        static readonly ActionParamsClass_Save s_params_Save = new ActionParamsClass_Save();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Save SaveParams { get { return s_params_Save; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Save
        {
            public readonly string files = "files";
        }
        static readonly ActionParamsClass_Remove s_params_Remove = new ActionParamsClass_Remove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Remove RemoveParams { get { return s_params_Remove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Remove
        {
            public readonly string fileNames = "fileNames";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string HotKey = "HotKey";
                public readonly string Index = "Index";
                public readonly string Manage = "Manage";
            }
            public readonly string HotKey = "~/Areas/Dashboard/Views/Tags/HotKey.cshtml";
            public readonly string Index = "~/Areas/Dashboard/Views/Tags/Index.cshtml";
            public readonly string Manage = "~/Areas/Dashboard/Views/Tags/Manage.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_TagsController : Mn.NewsCms.Web.Areas.Dashboard.Controllers.TagsController
    {
        public T4MVC_TagsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void HotKeyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult HotKey()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HotKey);
            HotKeyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateEditHotKeyOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Mn.NewsCms.Common.RecentKeyWord key);

        [NonAction]
        public override System.Web.Mvc.JsonResult CreateEditHotKey(Mn.NewsCms.Common.RecentKeyWord key)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateEditHotKey);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            CreateEditHotKeyOverride(callInfo, key);
            return callInfo;
        }

        [NonAction]
        partial void DeleteHotKeyOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Mn.NewsCms.Common.RecentKeyWord key);

        [NonAction]
        public override System.Web.Mvc.JsonResult DeleteHotKey(Mn.NewsCms.Common.RecentKeyWord key)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteHotKey);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            DeleteHotKeyOverride(callInfo, key);
            return callInfo;
        }

        [NonAction]
        partial void HotTags_ReadOverride(T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult callInfo, Kendo.Mvc.UI.DataSourceRequest request);

        [NonAction]
        public override Mn.NewsCms.Web.WebLogic.JsonNetResult HotTags_Read(Kendo.Mvc.UI.DataSourceRequest request)
        {
            var callInfo = new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.HotTags_Read);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            HotTags_ReadOverride(callInfo, request);
            return callInfo;
        }

        [NonAction]
        partial void Tag_ReadOverride(T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long? feedId);

        [NonAction]
        public override Mn.NewsCms.Web.WebLogic.JsonNetResult Tag_Read(Kendo.Mvc.UI.DataSourceRequest request, long? feedId)
        {
            var callInfo = new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Tag_Read);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedId", feedId);
            Tag_ReadOverride(callInfo, request, feedId);
            return callInfo;
        }

        [NonAction]
        partial void Tags_Data_ReadOverride(T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult callInfo, string term, bool isGrid);

        [NonAction]
        public override Mn.NewsCms.Web.WebLogic.JsonNetResult Tags_Data_Read(string term, bool isGrid)
        {
            var callInfo = new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Tags_Data_Read);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isGrid", isGrid);
            Tags_Data_ReadOverride(callInfo, term, isGrid);
            return callInfo;
        }

        [NonAction]
        partial void ManageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Manage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Manage);
            ManageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateEditOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Mn.NewsCms.Web.Models.TagViewModel tag);

        [NonAction]
        public override System.Web.Mvc.JsonResult CreateEdit(Mn.NewsCms.Web.Models.TagViewModel tag)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            CreateEditOverride(callInfo, tag);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Mn.NewsCms.Web.Models.TagViewModel key);

        [NonAction]
        public override System.Web.Mvc.JsonResult Delete(Mn.NewsCms.Web.Models.TagViewModel key)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            DeleteOverride(callInfo, key);
            return callInfo;
        }

        [NonAction]
        partial void SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> files);

        [NonAction]
        public override System.Web.Mvc.ActionResult Save(System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> files)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "files", files);
            SaveOverride(callInfo, files);
            return callInfo;
        }

        [NonAction]
        partial void RemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string[] fileNames);

        [NonAction]
        public override System.Web.Mvc.ActionResult Remove(string[] fileNames)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileNames", fileNames);
            RemoveOverride(callInfo, fileNames);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
