// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Mn.NewsCms.Web.Areas.Dashboard.Controllers
{
    public partial class CategoryController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CategoryController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Mn.NewsCms.Web.WebLogic.JsonNetResult Category_Read()
        {
            return new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Category_Read);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult AddFeedToCat()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddFeedToCat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RemoveFeedFromCat()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RemoveFeedFromCat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Manage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Manage);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CategoryController Actions { get { return MVC.Dashboard.Category; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Category";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Category";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Category_Read = "Category_Read";
            public readonly string AddFeedToCat = "AddFeedToCat";
            public readonly string RemoveFeedFromCat = "RemoveFeedFromCat";
            public readonly string Manage = "Manage";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Category_Read = "Category_Read";
            public const string AddFeedToCat = "AddFeedToCat";
            public const string RemoveFeedFromCat = "RemoveFeedFromCat";
            public const string Manage = "Manage";
        }


        static readonly ActionParamsClass_Category_Read s_params_Category_Read = new ActionParamsClass_Category_Read();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Category_Read Category_ReadParams { get { return s_params_Category_Read; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Category_Read
        {
            public readonly string request = "request";
            public readonly string feedId = "feedId";
        }
        static readonly ActionParamsClass_AddFeedToCat s_params_AddFeedToCat = new ActionParamsClass_AddFeedToCat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddFeedToCat AddFeedToCatParams { get { return s_params_AddFeedToCat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddFeedToCat
        {
            public readonly string catId = "catId";
            public readonly string feedId = "feedId";
        }
        static readonly ActionParamsClass_RemoveFeedFromCat s_params_RemoveFeedFromCat = new ActionParamsClass_RemoveFeedFromCat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveFeedFromCat RemoveFeedFromCatParams { get { return s_params_RemoveFeedFromCat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveFeedFromCat
        {
            public readonly string feedId = "feedId";
        }
        static readonly ActionParamsClass_Manage s_params_Manage = new ActionParamsClass_Manage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Manage ManageParams { get { return s_params_Manage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Manage
        {
            public readonly string Id = "Id";
            public readonly string category = "category";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string Manage = "Manage";
            }
            public readonly string Index = "~/Areas/Dashboard/Views/Category/Index.cshtml";
            public readonly string Manage = "~/Areas/Dashboard/Views/Category/Manage.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CategoryController : Mn.NewsCms.Web.Areas.Dashboard.Controllers.CategoryController
    {
        public T4MVC_CategoryController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Category_ReadOverride(T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long? feedId);

        [NonAction]
        public override Mn.NewsCms.Web.WebLogic.JsonNetResult Category_Read(Kendo.Mvc.UI.DataSourceRequest request, long? feedId)
        {
            var callInfo = new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.Category_Read);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedId", feedId);
            Category_ReadOverride(callInfo, request, feedId);
            return callInfo;
        }

        [NonAction]
        partial void AddFeedToCatOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int catId, int feedId);

        [NonAction]
        public override System.Web.Mvc.JsonResult AddFeedToCat(int catId, int feedId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddFeedToCat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "catId", catId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedId", feedId);
            AddFeedToCatOverride(callInfo, catId, feedId);
            return callInfo;
        }

        [NonAction]
        partial void RemoveFeedFromCatOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int feedId);

        [NonAction]
        public override System.Web.Mvc.JsonResult RemoveFeedFromCat(int feedId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RemoveFeedFromCat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedId", feedId);
            RemoveFeedFromCatOverride(callInfo, feedId);
            return callInfo;
        }

        [NonAction]
        partial void ManageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Manage(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Manage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            ManageOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void ManageOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Mn.NewsCms.Common.Category category);

        [NonAction]
        public override System.Web.Mvc.JsonResult Manage(Mn.NewsCms.Common.Category category)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Manage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "category", category);
            ManageOverride(callInfo, category);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
