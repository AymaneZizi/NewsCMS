// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Mn.NewsCms.Web.Controllers
{
    public partial class PhotoController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PhotoController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileContentResult CatPhoto()
        {
            return new T4MVC_System_Web_Mvc_FileContentResult(Area, Name, ActionNames.CatPhoto);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileContentResult GetPhoto()
        {
            return new T4MVC_System_Web_Mvc_FileContentResult(Area, Name, ActionNames.GetPhoto);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PhotoController Actions { get { return MVC.Photo; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Photo";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Photo";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Today = "Today";
            public readonly string GetPhotos = "GetPhotos";
            public readonly string CatPhoto = "CatPhoto";
            public readonly string GetPhoto = "GetPhoto";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Today = "Today";
            public const string GetPhotos = "GetPhotos";
            public const string CatPhoto = "CatPhoto";
            public const string GetPhoto = "GetPhoto";
        }


        static readonly ActionParamsClass_GetPhotos s_params_GetPhotos = new ActionParamsClass_GetPhotos();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPhotos GetPhotosParams { get { return s_params_GetPhotos; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPhotos
        {
            public readonly string offset = "offset";
        }
        static readonly ActionParamsClass_CatPhoto s_params_CatPhoto = new ActionParamsClass_CatPhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CatPhoto CatPhotoParams { get { return s_params_CatPhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CatPhoto
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_GetPhoto s_params_GetPhoto = new ActionParamsClass_GetPhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPhoto GetPhotoParams { get { return s_params_GetPhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPhoto
        {
            public readonly string ImagByte = "ImagByte";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string NewsPaper = "NewsPaper";
                public readonly string Today = "Today";
            }
            public readonly string NewsPaper = "~/Views/Photo/NewsPaper.cshtml";
            public readonly string Today = "~/Views/Photo/Today.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PhotoController : Mn.NewsCms.Web.Controllers.PhotoController
    {
        public T4MVC_PhotoController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TodayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Today()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Today);
            TodayOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetPhotosOverride(T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult callInfo, int offset);

        [NonAction]
        public override Mn.NewsCms.Web.WebLogic.JsonNetResult GetPhotos(int offset)
        {
            var callInfo = new T4MVC_Mn_NewsCms_Web_WebLogic_JsonNetResult(Area, Name, ActionNames.GetPhotos);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            GetPhotosOverride(callInfo, offset);
            return callInfo;
        }

        [NonAction]
        partial void CatPhotoOverride(T4MVC_System_Web_Mvc_FileContentResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.FileContentResult CatPhoto(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileContentResult(Area, Name, ActionNames.CatPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            CatPhotoOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void GetPhotoOverride(T4MVC_System_Web_Mvc_FileContentResult callInfo, byte[] ImagByte);

        [NonAction]
        public override System.Web.Mvc.FileContentResult GetPhoto(byte[] ImagByte)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileContentResult(Area, Name, ActionNames.GetPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ImagByte", ImagByte);
            GetPhotoOverride(callInfo, ImagByte);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
